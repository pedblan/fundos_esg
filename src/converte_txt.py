# -*- coding: utf-8 -*-"""Seleciona texto relevante dos arquivos pdf e docx. Converte arquivos para .txt. Estima custo da análise pela API da OpenAI."""from docx import Documentimport osimport fitzimport jsonwith open('../data/json/metadados.json', 'r', encoding='utf-8') as f:    metadados = json.load(f)class FileDataError(Exception):    """Exceção para erros relacionados a dados de arquivos inválidos ou corrompidos."""    def __init__(self, message="Dados de arquivo inválidos ou corrompidos"):        self.message = message        super().__init__(self.message)def verificar_pdfs_corrompidos(diretorio):    pdfs_corrompidos = []    for arquivo in os.listdir(diretorio):        if arquivo.endswith('.pdf'):            caminho_completo = os.path.join(diretorio, arquivo)            try:                # Tenta abrir o arquivo PDF                doc = fitz.open(caminho_completo)                doc.close()  # Fecha o documento se foi aberto com sucesso            except Exception as e:                # Se uma exceção foi lançada, o arquivo pode estar corrompido                pdfs_corrompidos.append(arquivo)                print(f"Arquivo potencialmente corrompido: {arquivo}, erro: {e}")    return pdfs_corrompidosdef extrair_texto_pdf(caminho_pdf):    doc = fitz.open(caminho_pdf)  # Tenta abrir o arquivo PDF    texto = ""    for pagina in doc:  # Itera pelas páginas do documento        texto += pagina.get_text("text")    doc.close()    return texto  # Retorna o texto extraído e None para indicar que não houve errodef extrair_texto_docx(caminho_arquivo):    doc = Document(caminho_arquivo)    texto = '\n'.join(paragraph.text for paragraph in doc.paragraphs)    return textodef salvar_texto_em_txt(texto, nome_arquivo):    with open(nome_arquivo, 'w', encoding='utf-8') as arquivo_txt:        arquivo_txt.write(texto) def converter():    """Converte arquivos pdf de regulamentos para txt e os salva na pasta ..data/txt."""    diretorio = '../data/pdf/'    destino = '../data/txt/'     if not os.path.exists(destino):        # Se não existir, cria o diretório        os.makedirs(destino)    for arquivo in os.listdir(diretorio):        if arquivo in verificar_pdfs_corrompidos(diretorio):            continue        caminho_completo = os.path.join(diretorio, arquivo)        destino_completo = os.path.join(destino, arquivo)        if arquivo.endswith('.pdf'):            texto = extrair_texto_pdf(caminho_completo)            salvar_texto_em_txt(texto, destino_completo.replace('.pdf', '.txt'))        elif arquivo.endswith('.docx'):            texto = extrair_texto_docx(caminho_completo)            salvar_texto_em_txt(texto, destino_completo.replace('.docx', '.txt'))        print(f"Arquivo {arquivo} convertido e gravado na pasta txt.")